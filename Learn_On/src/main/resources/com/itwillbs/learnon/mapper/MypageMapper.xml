<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.learnon.mapper.MypageMapper">
	<select id="selectWishlist" resultType="wish">
		-- 관심목록 조회
		SELECT 
			 W.MEM_ID
			 , W.CLASS_ID
			 , C.CLASS_CATEGORY
			 , C.CLASS_TITLE
		     , C.CLASS_REG_DATE
		     , TRUNCATE(IFNULL(AVG(REVIEW_SCORE), 0), 1) AS REVIEW_SCORE
		     , M.MEM_NAME AS TEACHER_NAME
		  FROM WISHLIST W 
		  LEFT JOIN CLASS C ON C.CLASS_ID = W.CLASS_ID
		  LEFT JOIN MEMBER M ON M.MEM_ID = C.MEM_ID
		  LEFT JOIN REVIEW R ON R.CLASS_ID = C.CLASS_ID
		 WHERE W.MEM_ID = 'hong1234'
		 GROUP BY W.MEM_ID
				  , W.CLASS_ID
		          , C.CLASS_CATEGORY
		          , C.CLASS_TITLE
		          , C.CLASS_REG_DATE
		          , M.MEM_NAME
		 <choose>
		 	<when test="filterType.equals('newest')">
				ORDER BY C.CLASS_REG_DATE DESC
		 	</when>
		 	<when test="filterType.equals('popularity')">
				ORDER BY REVIEW_SCORE DESC
		 	</when>
		 </choose>
	</select>
	<delete id="deleteWish">
		-- 관심목록 삭제
		DELETE FROM WISHLIST
		WHERE CLASS_ID = #{class_id};
	</delete>
	<select id="selectMyCourse" resultType="mycourse">
		-- 나의 강의실 목록 조회
		SELECT 
			  A.MEM_ID
		      , A.COURSE_STATUS
		      , IFNULL(A.STUDY_TIME, 0) AS STUDY_TIME
		      , C.CLASS_ID
		      , C.CLASS_CATEGORY
		      , C.CLASS_TITLE
		      , C.CLASS_RUNTIME
		      , (SELECT COUNT(CUR_ID)
		        FROM CURRICULUM
		        WHERE CLASS_ID = C.CLASS_ID) AS CURRICULUM_COUNT
		      , M.MEM_NAME AS TEACHER_NAME
		      , R.REVIEW_IDX
		      , R.REVIEW_SUBJECT
		      , R.REVIEW_CONTENT
		  FROM MYCOURSE A
		  LEFT JOIN CLASS C ON C.CLASS_ID = A.CLASS_ID
		  LEFT JOIN MEMBER M ON C.MEM_ID = M.MEM_ID
		  LEFT JOIN REVIEW R ON R.CLASS_ID = A.CLASS_ID
					   AND R.MEM_ID = A.MEM_ID
		WHERE A.MEM_ID = #{id}
		<choose>
		 	<when test="filterType.equals('newest')">
				ORDER BY C.CLASS_REG_DATE DESC
		 	</when>
		 	<when test="filterType.equals('title')">
				ORDER BY C.CLASS_TITLE
		 	</when>
		 </choose>
	</select>
	
	<insert id="insertReview">
		-- 수강평 등록
		INSERT 
		INTO REVIEW
		VALUES (
				null 				-- 번호 자동증가
				, #{mem_id}
			    , #{review_subject}
			    , #{review_content}
			    , NOW()
			    , #{class_id}
			    , #{review_score}
			    , null
			    , null
		   		)
	</insert>
</mapper>